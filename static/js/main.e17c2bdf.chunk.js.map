{"version":3,"sources":["components/header/header.component.jsx","components/footer/footer.component.jsx","components/input/input.component.jsx","redux/car/car.types.js","components/add-car-form/add-car-form.component.jsx","redux/car/car.actions.js","redux/utils.js","components/cars-list/cars-list.componen.jsx","components/main-page/main-page.component.jsx","App.js","redux/car/car.reducer.js","redux/car/car.data.js","redux/root-reducer.js","redux/store.js","index.js"],"names":["useStyles","makeStyles","theme","console","log","header","width","height","background","palette","primary","main","Header","classes","className","footer","Footer","Input","props","label","id","type","changed","adorment","fileName","style","value","Grid","item","TextField","InputProps","endAdornment","InputAdornment","position","onChange","marginTop","accept","display","multiple","htmlFor","Button","component","variant","startIcon","carActionTypes","AddCarForm","createCarsArray","obj","carsArray","key","push","config","form12","addCarHandler","carData","addCar","resetValues","this","container","Typography","lineHeight","map","car","imageName","adornment","event","inputChange","justify","color","size","onClick","e","React","Component","connect","state","dispatch","elementType","payload","generateID","Math","random","toString","substr","carsList","removeCar","carId","tableHeader","createTableHeader","TableContainer","Paper","margin","Table","aria-label","TableHead","TableRow","length","TableCell","align","TableBody","scope","name","liters_per_100km","cylinders","horsepower","weight_in_kg","acceleration","year","src","photo","Icon","minHeight","alignItems","flexDirection","MainPage","Fragment","Container","maxWidth","alignitems","App","INITIAL_STATE","carDataCopy","carToRemoveId","newCarsList","filter","newCarData","currentTarget","image","target","files","reader","FileReader","readAsDataURL","onload","result","carReducer","action","persistConfig","storage","whitelist","rootReducer","combineReducers","persistReducer","middlewares","logger","store","createStore","applyMiddleware","persistor","persistStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e17c2bdf.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => {\r\n  console.log('theme = ', theme);\r\n  return {\r\n    header: {\r\n      width: '100%',\r\n      height: '100px',\r\n      background: theme.palette.primary.main\r\n    }\r\n  }\r\n});\r\n\r\n\r\nconst Header = () => {\r\n  const classes = useStyles(); \r\n  return (\r\n    <header className={classes.header}>\r\n\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => {\r\n  console.log('theme = ', theme);\r\n  return {\r\n    footer: {\r\n      width: '100%',\r\n      height: '100px',\r\n      background: theme.palette.primary.main\r\n    }\r\n  };\r\n});\r\n\r\nconst Footer = () => {\r\n  const classes = useStyles();\r\n\r\n  return <footer className={classes.footer}></footer>;\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\n\r\nconst Input = props => {\r\n  const { label, id, type, changed, adorment,fileName, style, value } = props;\r\n\r\n  let input;\r\n  if (type !== 'file') {\r\n    input = (\r\n      <Grid item>\r\n        <TextField\r\n          label={label}\r\n          id={id}\r\n          type={type}\r\n          style={style}\r\n          value={value}\r\n          InputProps={{endAdornment:<InputAdornment position=\"end\">{adorment}</InputAdornment>}}\r\n          onChange={changed}\r\n        ></TextField>\r\n      </Grid>\r\n    );\r\n  } else {\r\n    input = (\r\n      <Grid\r\n        item\r\n        style={{ width: '20em', marginTop: '5px'}}\r\n\r\n      >\r\n        <input\r\n          accept=\"image/*\"\r\n          style={{ display: 'none' }}\r\n          id=\"raised-button-file\"\r\n          multiple\r\n          type={type}\r\n          value={value}\r\n          onChange={changed}\r\n        />\r\n        <label htmlFor=\"raised-button-file\">\r\n          <Button\r\n            component=\"span\"\r\n            variant=\"contained\"\r\n            startIcon={<CloudUploadIcon />}\r\n          >\r\n            {fileName || 'Фото'}\r\n          </Button>\r\n        </label>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  return input;\r\n};\r\n\r\nexport default Input;\r\n","export const carActionTypes = {\r\n  ADD_CAR: 'ADD_CAR',\r\n  REMOVE_CAR: 'REMOVE_CAR',\r\n  INPUT_CHANGE: 'INPUT_CHANGE',\r\n  RESET_VALUES: 'RESET_VALUES'\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport Input from '../input/input.component';\r\nimport {\r\n  addCar,\r\n  inputChange,\r\n  removeCar,\r\n  resetValues\r\n} from '../../redux/car/car.actions';\r\n\r\nclass AddCarForm extends React.Component {\r\n  createCarsArray = obj => {\r\n    const carsArray = [];\r\n    for (let key in obj) {\r\n      carsArray.push({\r\n        id: key,\r\n        config: obj[key]\r\n      });\r\n    }\r\n    return carsArray;\r\n  };\r\n\r\n  useStyles = () => {\r\n    return makeStyles(theme => ({\r\n      form12: {\r\n        width: '20em'\r\n      }\r\n    }));\r\n  };\r\n\r\n  addCarHandler = carData => {\r\n    this.props.addCar(carData);\r\n    this.props.resetValues();\r\n  };\r\n\r\n  render() {\r\n    const classes = this.useStyles();\r\n    const carsArray = this.createCarsArray(this.props.carData);\r\n\r\n    return (\r\n      <Grid item>\r\n        <Grid item container style={{ width: '20em', marginTop: '50px' }}>\r\n          <Typography variant=\"h3\" style={{ lineHeight: 1 }}>\r\n            {' '}\r\n            ADD NEW CAR\r\n          </Typography>\r\n          {carsArray.map(car => {\r\n            // console.log('car = ',  car);\r\n\r\n            return (\r\n              <Input\r\n                key={car.id}\r\n                type={car.config.type}\r\n                label={car.config.label}\r\n                style={{ width: '20em', marginTop: '5px' }}\r\n                value={this.props.carData[car.id].value}\r\n                fileName={car.config.imageName}\r\n                adorment={car.config.adornment}\r\n                changed={event =>\r\n                  this.props.inputChange(event, car.config.type, car.id)\r\n                }\r\n              ></Input>\r\n            );\r\n          })}\r\n          <Grid item container justify=\"center\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"large\"\r\n              style={{ marginTop: '10px' }}\r\n              onClick={e => this.addCarHandler(this.props.carData)}\r\n            >\r\n              Додати\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    carData: state.car.carData\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    inputChange: (event, elementType, id) =>\r\n      dispatch(inputChange(event, elementType, id)),\r\n    addCar: car => dispatch(addCar(car)),\r\n    resetValues: () => dispatch(resetValues())\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddCarForm);\r\n","import { carActionTypes } from './car.types';\r\n\r\nexport const addCar = car => ({\r\n  type: carActionTypes.ADD_CAR,\r\n  payload: car\r\n});\r\n\r\nexport const removeCar = carId => ({\r\n  type: carActionTypes.REMOVE_CAR,\r\n  payload: carId\r\n});\r\n\r\nexport const inputChange = (event, type, id) => ({\r\n    type: carActionTypes.INPUT_CHANGE,\r\n    payload: { event, type, id }\r\n  })\r\n\r\nexport const resetValues = () => ({\r\n  type: carActionTypes.RESET_VALUES\r\n});\r\n","export const generateID = () => {\r\n  return '_' + Math.random().toString(36).substr(2, 9);\r\n};","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport { removeCar } from '../../redux/car/car.actions';\r\n\r\nimport { generateID } from '../../redux/utils';\r\n\r\nconst createTableHeader = obj => {\r\n  let carsArray = [];\r\n  for (let key in obj) {\r\n    carsArray.push({\r\n      id: generateID(),\r\n      label: obj[key].label\r\n      \r\n    });\r\n  }\r\n  carsArray = [...carsArray, { id: 'remove', label: 'Видалити' }];\r\n  return carsArray;\r\n};\r\n\r\nconst CarsList = props => {\r\n  const { carsList, carData } = props;\r\n\r\n  const tableHeader = createTableHeader(carData);\r\n\r\n  return (\r\n    <TableContainer component={Paper} style={{ margin: '50px' }}>\r\n      <Table aria-label=\"simple table\">\r\n        <TableHead style={{ background: '#ccc' }}>\r\n          <TableRow>\r\n            {carsList.length > 0\r\n              ? tableHeader.map(car => {\r\n                  return (\r\n                    <TableCell align=\"center\" key={car.id}>\r\n                      {car.label}\r\n                    </TableCell>\r\n                  );\r\n                })\r\n              : null}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {carsList.map(car => {\r\n            return (\r\n              <TableRow key={car.id}>\r\n                <TableCell component=\"th\" align=\"center\" scope=\"row\">\r\n                  {car.name}\r\n                </TableCell>\r\n                <TableCell align=\"center\">{car.liters_per_100km}</TableCell>\r\n                <TableCell align=\"center\">{car.cylinders}</TableCell>\r\n                <TableCell align=\"center\">{car.horsepower}</TableCell>\r\n                <TableCell align=\"center\">{car.weight_in_kg}</TableCell>\r\n                <TableCell align=\"center\">{car.acceleration}</TableCell>\r\n                <TableCell align=\"center\">{car.year}</TableCell>\r\n                <TableCell align=\"center\">\r\n                  <img src={car.photo} style={{ height: '50px' }}></img>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <Icon onClick={() => props.removeCar(car.id)}>delete</Icon>\r\n                </TableCell>\r\n              </TableRow>\r\n            );\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    carsList: state.car.carsList,\r\n    carData: state.car.carData\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    removeCar: carId => dispatch(removeCar(carId))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CarsList);\r\n","import React from 'react';\r\n\r\nimport Container from '@material-ui/core/Container';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Header from '../header/header.component';\r\nimport Footer from '../footer/footer.component';\r\nimport AddCarForm from \"../add-car-form/add-car-form.component\";\r\nimport CarsList from \"../cars-list/cars-list.componen\";\r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    minHeight: 84 + 'vh',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    flexDirection: 'column'\r\n  }\r\n});\r\n\r\nconst MainPage = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <React.Fragment>\r\n      <Header></Header>\r\n      <Container maxWidth={false} alignitems='center' className={classes.container}>\r\n        <AddCarForm></AddCarForm>\r\n        <CarsList></CarsList>\r\n      </Container>\r\n      <Footer></Footer>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","import React from 'react';\n\nimport './app.styles.css';\n\nimport MainPage from \"./components/main-page/main-page.component\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MainPage></MainPage>\n    </div>\n  );\n}\n\nexport default App;\n\n","import { carActionTypes } from './car.types';\r\nimport { generateID } from '../utils';\r\n\r\nimport { DATA } from './car.data';\r\n\r\nconst INITIAL_STATE = DATA;\r\n\r\nconst carReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case carActionTypes.ADD_CAR:\r\n      return addCar(state, action.payload);\r\n\r\n    case carActionTypes.REMOVE_CAR:\r\n      return removeCar(state, action.payload);\r\n\r\n    case carActionTypes.INPUT_CHANGE:\r\n      return inputChange(state, action.payload);\r\n\r\n    case carActionTypes.RESET_VALUES:\r\n      return resetValues(state);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst resetValues = (state) => {\r\n  const carDataCopy = { ...state.carData };\r\n  for (let key in carDataCopy) {\r\n    carDataCopy[key].value = '';\r\n    carDataCopy[key].src = '';\r\n  }\r\n  return {\r\n    ...state,\r\n    carData: carDataCopy\r\n  }\r\n}\r\n\r\nconst addCar = (state, payload) => {\r\n\r\n  const {\r\n    name,\r\n    liters_per_100km,\r\n    cylinders,\r\n    horsepower,\r\n    weight_in_kg,\r\n    acceleration,\r\n    year,\r\n    photo\r\n  } = payload;\r\n\r\n  const car = {\r\n    id: generateID(),\r\n    name: name.value,\r\n    liters_per_100km: liters_per_100km.value,\r\n    cylinders: cylinders.value,\r\n    horsepower: horsepower.value,\r\n    weight_in_kg: weight_in_kg.value,\r\n    acceleration: acceleration.value,\r\n    year: year.value,\r\n    photo: photo.src\r\n  };\r\n\r\n  return {\r\n    ...state,\r\n    carsList: [...state.carsList, car]\r\n  };\r\n};\r\n\r\nconst removeCar = (state, payload) => {\r\n  let carToRemoveId = payload;\r\n  const newCarsList = state.carsList.filter(car => {\r\n    return car.id !== carToRemoveId;\r\n  });\r\n\r\n  return {\r\n    ...state,\r\n    carsList: newCarsList\r\n  };\r\n};\r\n\r\nconst inputChange = (state, payload) => {\r\n  let { type, event } = payload;\r\n  let newCarData = { ...state.carData };\r\n\r\n  if (type !== 'file') {\r\n    newCarData[payload.id].value = event.currentTarget.value;\r\n    return {\r\n      ...state,\r\n      carData: newCarData\r\n    };\r\n  } else {\r\n    let image = event.target.files[0],\r\n      reader = new FileReader();\r\n    // newCarData[payload.id].imageName = image.name;\r\n\r\n    reader.readAsDataURL(image);\r\n    reader.onload = function() {\r\n      newCarData[payload.id].src = reader.result;\r\n\r\n      return {\r\n        ...state,\r\n        carData: newCarData\r\n      };\r\n    };\r\n  }\r\n  return {\r\n    ...state\r\n  };\r\n};\r\n\r\nexport default carReducer;\r\n","export const DATA = {\r\n  carData: {\r\n    name: {\r\n      type: 'text',\r\n      label: 'Назва',\r\n      value: '',\r\n      adornment:''\r\n    },\r\n    liters_per_100km: {\r\n      type: 'number',\r\n      label: 'Л/100км',\r\n      value: '',\r\n      adornment: 'л'\r\n    },\r\n    cylinders:{\r\n      type: 'number',\r\n      label: 'Циліндрів',\r\n      value: '',\r\n      adornment: 'шт'\r\n    },\r\n    horsepower:{\r\n      type: 'number',\r\n      label: 'Потужність',\r\n      value: '',\r\n      adornment: 'л.с'\r\n    },\r\n    weight_in_kg:{\r\n      type: 'number',\r\n      label: 'Вага',\r\n      value: '',\r\n      adornment: 'кг'\r\n    },\r\n    acceleration:{\r\n      type: 'number',\r\n      label: 'Прискорення',\r\n      value: '',\r\n      adornment: 'сек'\r\n    },\r\n    year: {\r\n      type: 'number',\r\n      label: 'Рік випуску',\r\n      value: '',\r\n      adornment: 'р.в'\r\n    },\r\n    photo: {\r\n      type: 'file',\r\n      label: 'Фото',\r\n      imageName: '',\r\n      src: '',\r\n      adornment: ''\r\n    }\r\n  },\r\n  carsList: []\r\n}","import { combineReducers } from \"redux\";\r\nimport { persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nimport carReducer from \"./car/car.reducer\";\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n  whitelist: ['car']\r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n  car: carReducer\r\n})\r\n\r\nexport default persistReducer(persistConfig, rootReducer);","import { createStore, applyMiddleware } from 'redux';\r\nimport logger from 'redux-logger';\r\nimport { persistStore } from 'redux-persist';\r\n\r\nimport rootReducer from './root-reducer';\r\n\r\nconst middlewares = [logger];\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\r\n\r\nexport const persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport { store, persistor } from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}